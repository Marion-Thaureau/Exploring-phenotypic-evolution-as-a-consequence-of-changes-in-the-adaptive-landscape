Starting job 11096748 on c1-12 on saga at Sat Apr 6 18:21:36 CEST 2024


Currently Loaded Modules:
  1) StdEnv                              (S)
  2) GCCcore/11.3.0
  3) zlib/1.2.12-GCCcore-11.3.0          (H)
  4) binutils/2.38-GCCcore-11.3.0        (H)
  5) GCC/11.3.0
  6) numactl/2.0.14-GCCcore-11.3.0       (H)
  7) XZ/5.2.5-GCCcore-11.3.0             (H)
  8) libxml2/2.9.13-GCCcore-11.3.0       (H)
  9) libpciaccess/0.16-GCCcore-11.3.0    (H)
 10) hwloc/2.7.1-GCCcore-11.3.0          (H)
 11) hpcx/2.14
 12) OpenMPI/4.1.4-GCC-11.3.0
 13) OpenBLAS/0.3.20-GCC-11.3.0
 14) FlexiBLAS/3.2.0-GCC-11.3.0
 15) FFTW/3.3.10-GCC-11.3.0
 16) gompi/2022a
 17) FFTW.MPI/3.3.10-gompi-2022a
 18) ScaLAPACK/2.2.0-gompi-2022a-fb
 19) foss/2022a
 20) bzip2/1.0.8-GCCcore-11.3.0          (H)
 21) expat/2.4.8-GCCcore-11.3.0          (H)
 22) libpng/1.6.37-GCCcore-11.3.0        (H)
 23) Brotli/1.0.9-GCCcore-11.3.0         (H)
 24) freetype/2.12.1-GCCcore-11.3.0      (H)
 25) ncurses/6.3-GCCcore-11.3.0          (H)
 26) util-linux/2.38-GCCcore-11.3.0      (H)
 27) fontconfig/2.14.0-GCCcore-11.3.0    (H)
 28) xorg-macros/1.19.3-GCCcore-11.3.0   (H)
 29) X11/20220504-GCCcore-11.3.0         (H)
 30) gzip/1.12-GCCcore-11.3.0            (H)
 31) lz4/1.9.3-GCCcore-11.3.0            (H)
 32) zstd/1.5.2-GCCcore-11.3.0           (H)
 33) libdrm/2.4.110-GCCcore-11.3.0       (H)
 34) libglvnd/1.4.0-GCCcore-11.3.0       (H)
 35) libunwind/1.6.2-GCCcore-11.3.0      (H)
 36) LLVM/14.0.3-GCCcore-11.3.0          (H)
 37) Mesa/22.0.3-GCCcore-11.3.0          (H)
 38) libGLU/9.0.2-GCCcore-11.3.0         (H)
 39) pixman/0.40.0-GCCcore-11.3.0        (H)
 40) libffi/3.4.2-GCCcore-11.3.0         (H)
 41) gettext/0.21-GCCcore-11.3.0         (H)
 42) PCRE/8.45-GCCcore-11.3.0            (H)
 43) GLib/2.72.1-GCCcore-11.3.0          (H)
 44) cairo/1.17.4-GCCcore-11.3.0         (H)
 45) libreadline/8.1.2-GCCcore-11.3.0    (H)
 46) Tcl/8.6.12-GCCcore-11.3.0           (H)
 47) SQLite/3.38.3-GCCcore-11.3.0        (H)
 48) PCRE2/10.40-GCCcore-11.3.0          (H)
 49) NASM/2.15.05-GCCcore-11.3.0         (H)
 50) libjpeg-turbo/2.1.3-GCCcore-11.3.0  (H)
 51) jbigkit/2.1-GCCcore-11.3.0          (H)
 52) libdeflate/1.10-GCCcore-11.3.0      (H)
 53) LibTIFF/4.3.0-GCCcore-11.3.0        (H)
 54) Java/11.0.16
 55) Tk/8.6.12-GCCcore-11.3.0            (H)
 56) OpenSSL/1.1                         (H)
 57) cURL/7.83.0-GCCcore-11.3.0          (H)
 58) GMP/6.2.1-GCCcore-11.3.0            (H)
 59) NLopt/2.7.1-GCCcore-11.3.0          (H)
 60) libogg/1.3.5-GCCcore-11.3.0         (H)
 61) FLAC/1.3.4-GCCcore-11.3.0           (H)
 62) libvorbis/1.3.7-GCCcore-11.3.0      (H)
 63) libopus/1.3.1-GCCcore-11.3.0        (H)
 64) LAME/3.100-GCCcore-11.3.0           (H)
 65) libsndfile/1.1.0-GCCcore-11.3.0     (H)
 66) ICU/71.1-GCCcore-11.3.0             (H)
 67) Szip/2.1.1-GCCcore-11.3.0           (H)
 68) HDF5/1.12.2-gompi-2022a
 69) UDUNITS/2.2.28-GCCcore-11.3.0
 70) GSL/2.7-GCC-11.3.0
 71) ATK/2.38.0-GCCcore-11.3.0           (H)
 72) Gdk-Pixbuf/2.42.8-GCCcore-11.3.0    (H)
 73) HarfBuzz/4.2.1-GCCcore-11.3.0       (H)
 74) FriBidi/1.0.12-GCCcore-11.3.0       (H)
 75) Pango/1.50.7-GCCcore-11.3.0         (H)
 76) GTK2/2.24.33-GCCcore-11.3.0         (H)
 77) Ghostscript/9.56.1-GCCcore-11.3.0   (H)
 78) JasPer/2.0.33-GCCcore-11.3.0        (H)
 79) LittleCMS/2.13.1-GCCcore-11.3.0     (H)
 80) ImageMagick/7.1.0-37-GCCcore-11.3.0 (H)
 81) GLPK/5.0-GCCcore-11.3.0             (H)
 82) nodejs/16.15.1-GCCcore-11.3.0       (H)
 83) Python/3.10.4-GCCcore-11.3.0
 84) netCDF/4.9.0-gompi-2022a
 85) GEOS/3.10.3-GCC-11.3.0
 86) nlohmann_json/3.10.5-GCCcore-11.3.0 (H)
 87) PROJ/9.0.0-GCCcore-11.3.0
 88) libgeotiff/1.7.1-GCCcore-11.3.0     (H)
 89) pybind11/2.9.2-GCCcore-11.3.0       (H)
 90) SciPy-bundle/2022.05-foss-2022a
 91) libtirpc/1.3.2-GCCcore-11.3.0       (H)
 92) HDF/4.2.15-GCCcore-11.3.0           (H)
 93) GDAL/3.5.0-foss-2022a
 94) MPFR/4.1.0-GCCcore-11.3.0           (H)
 95) libgit2/1.4.3-GCCcore-11.3.0        (H)
 96) R/4.2.1-foss-2022a

  Where:
   H:  Hidden Module
   S:  Module is Sticky, requires --force to unload or purge

 


R version 4.2.1 (2022-06-23) -- "Funny-Looking Kid"
Copyright (C) 2022 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> .libPaths("/cluster/home/marionth/R")
> library(evoTS)
Warning message:
package ‘evoTS’ was built under R version 4.2.2 
> library(paleoTS)
Warning message:
package ‘paleoTS’ was built under R version 4.2.2 
> library(stats)
> library(dplyr)

Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

> library(parallel)
> library(foreach)
> library(doParallel)
Loading required package: iterators
> library(MCSPCD)
> 
> 
> setwd("/cluster/home/marionth/Jensen")
> 
> 
> 
> ###### LOAD MORPHOLOGICAL DATA ######
> 
> 
> 
> data1=read.delim("/cluster/home/marionth/Jensen/Atlantic_salmon_size.txt")
> data1 = data1 %>% filter(!is.na(Year.of.catch))
> 
> year=unique(data1$Year.of.catch)  #garder qu un exemplaire de chaque date
> data2=matrix(nrow=length(year), ncol=4)
> colnames(data2)<-c("nn"," mm", "vv", "tt")
> 
> for (i in 1:length(year)){
+   subdat=subset(data1, data1$Year.of.catch == year[i])  # un subset par annee
+   
+   data2[i,1] = nrow(subdat)
+   data2[i,2] = mean(subdat$Mass)
+   data2[i,3] = var(subdat$Mass)
+   data2[i,4] = year[i]
+ }
> 
> data2=data2[order(year),]
> 
> 
> 
> ###### FOR FROM JUN TO SEPT WATER FLOW VALUES ######
> ###### LOAD ENVIRONMENTAL DATA AND RESIZE ######
> 
> 
> 
> Discharge <- read.delim("/cluster/home/marionth/Jensen/Discharge.txt")
> Envi = Discharge[-c(1:9,28:35,87:88),]
> Morpho = data2[-c(1:2),]  # garder que les lignes ou on a les donnees pour l environment et le morpho
> 
> 
> 
> ###### CREATING PALEOTS AND EVOTS OBJECTS ######
> 
> 
> 
> dataEnvi=paleoTS::as.paleoTS(mm=Envi[,3], vv=c(rep(0.000001,length(Envi[,1]))), nn=c(rep(1000,length(Envi[,1]))), tt=Envi[,1], oldest = "first")
> ln.dataEnvi=paleoTS::ln.paleoTS(dataEnvi)
> dataEnvi$tt=dataEnvi$tt/(max(dataEnvi$tt))
> ln.dataEnvi$tt=ln.dataEnvi$tt/(max(ln.dataEnvi$tt))
> 
> dataMorpho=paleoTS::as.paleoTS(mm=Morpho[,2], vv=Morpho[,3], nn=Morpho[,1], tt=Morpho[,4], oldest = "first")
> ln.dataMorpho=paleoTS::ln.paleoTS(dataMorpho)
> dataMorpho$tt=dataMorpho$tt/(max(dataMorpho$tt))
> ln.dataMorpho$tt=ln.dataMorpho$tt/(max(ln.dataMorpho$tt))
> 
> 
> 
> 
> 
> multilnmorpholnenvi=make.multivar.evoTS(ln.dataMorpho, ln.dataEnvi) 
> plotevoTS.multivariate(multilnmorpholnenvi, y_min=0, y_max=20, x.label="relative time", y.label="Salmon mass and water flow", pch=c(20,20))
> 
> 
> 
> 
> 
> ###### MULTIVARIATE MODELS ######
> 
> 
> 
> 
> #number of cores that I want to use (also defined in the batch script)
> registerDoParallel(15)
> 
> #To calculate the time needed to process each iteration
> start_time <- Sys.time()
> 
> 
> 
> A = matrix(c(1,1,0,1), nrow = 2, byrow=TRUE) #1 for parametrised and 0 for not parametrised
> R = matrix(c(1,1,1,1), nrow = 2, byrow=TRUE) #5 traits donc 25 cases dans la matrice
> 
> 
> 
> 
> 
> #Loop foreach 
> OUOUmodel.upperrowdiagENVIjs <- foreach(i=1:100) %dopar% { #calculation for each iteration 
+   result <- multiResultClass() #create a table to store the results
+   
+   #set and register a different seed for each loop
+   seed <- (10+i) 
+   set.seed(seed)
+   
+   result$result1 <- seed
+   result$result2 <- fit.multivariate.OU.user.defined(multilnmorpholnenvi,A.user=A,R.user=R, iterations=1, iter.sd=0.000001)
+   
+   
+   end_time <- Sys.time(); end_time - start_time 
+   print( end_time - start_time ) 
+   result$result3 <- end_time - start_time 
+   
+   return(result)
+   
+ }
Time difference of 1.897429 hours
Time difference of 2.627526 hours
Time difference of 3.23048 hours
Time difference of 3.298374 hours
Time difference of 3.756177 hours
Time difference of 3.876208 hours
Time difference of 3.896741 hours
Time difference of 4.029868 hours
Time difference of 4.409156 hours
Time difference of 4.750929 hours
Time difference of 4.872706 hours
Time difference of 5.120723 hours
Time difference of 5.672485 hours
Time difference of 5.750285 hours
Time difference of 5.926519 hours
Time difference of 6.57945 hours
Time difference of 6.944454 hours
Time difference of 7.224202 hours
Time difference of 7.375997 hours
Time difference of 8.265141 hours
Time difference of 8.306089 hours
Time difference of 9.152561 hours
Time difference of 9.496615 hours
Time difference of 9.788311 hours
Time difference of 10.09271 hours
Time difference of 10.10421 hours
Time difference of 10.13144 hours
Time difference of 10.49412 hours
Time difference of 10.72913 hours
Time difference of 11.43585 hours
Time difference of 11.45384 hours
Time difference of 11.53805 hours
Time difference of 11.65886 hours
Time difference of 12.4284 hours
Time difference of 13.03253 hours
Time difference of 13.2688 hours
Time difference of 13.46711 hours
Time difference of 13.71881 hours
Time difference of 13.85459 hours
Time difference of 14.46313 hours
Time difference of 14.737 hours
Time difference of 14.9439 hours
Time difference of 15.22052 hours
Time difference of 15.61309 hours
Time difference of 15.76357 hours
Time difference of 15.94471 hours
Time difference of 16.53908 hours
Time difference of 16.85522 hours
Time difference of 17.05685 hours
Time difference of 17.18627 hours
Time difference of 17.28109 hours
Time difference of 17.51506 hours
Time difference of 17.94325 hours
Time difference of 18.62653 hours
Time difference of 19.30018 hours
Time difference of 19.37605 hours
Time difference of 19.75537 hours
Time difference of 20.02365 hours
Time difference of 20.24888 hours
Time difference of 20.37972 hours
Time difference of 20.45497 hours
Time difference of 20.77389 hours
Time difference of 20.81831 hours
Time difference of 20.9043 hours
Time difference of 20.95884 hours
Time difference of 20.97749 hours
Time difference of 21.64596 hours
Time difference of 22.26261 hours
Time difference of 22.4399 hours
Time difference of 23.40337 hours
Time difference of 23.47956 hours
Time difference of 23.4972 hours
Time difference of 1.001711 days
Time difference of 1.006143 days
Time difference of 1.011297 days
Time difference of 1.032477 days
Time difference of 1.032984 days
Time difference of 1.036259 days
Time difference of 1.041358 days
Time difference of 1.063803 days
Time difference of 1.067508 days
Time difference of 1.087854 days
Time difference of 1.0935 days
Time difference of 1.111386 days
Time difference of 1.114718 days
Time difference of 1.125456 days
Time difference of 1.129439 days
Time difference of 1.137012 days
Time difference of 1.138933 days
Time difference of 1.14451 days
Time difference of 1.1523 days
Time difference of 1.159568 days
Time difference of 1.167291 days
Time difference of 1.187596 days
Time difference of 1.190881 days
Time difference of 1.211754 days
Time difference of 1.220547 days
Time difference of 1.223125 days
Time difference of 1.252772 days
Time difference of 1.268551 days
> 
> 
> print ("DONE")
[1] "DONE"
> end_time <- Sys.time(); end_time - start_time
Time difference of 1.268557 days
> 
> 
> #creation of AIC matrix
> AICvalues<-matrix(ncol=2,nrow=100)
> colnames(AICvalues) <- c("iteration", "AIC")
> 
> 
> #Loop to fill the AIC matrix
> for (j in 1:100) {
+   AICvalues[j,1] = j #iteration number
+   AICvalues[j,2] = OUOUmodel.upperrowdiagENVIjs[[j]]$result2$AIC #AIC value
+ }
> 
> 
> #Finding the best AIC
> BestAICiteration = which.min(AICvalues[,2])
> 
> #Finding the best iteration associated to the best AIC
> BESTRESULT=OUOUmodel.upperrowdiagENVIjs[[BestAICiteration]]
> BESTRESULT
$LE_overall
NULL

$LE_overall_exp
NULL

$LE_overall_nonexp
NULL

$LE_without_dis
NULL

$LE_without_dis_exp
NULL

$LE_without_dis_nonexp
NULL

$LE_dis
NULL

$LE_dis_exp
NULL

$LE_dis_nonexp
NULL

$LE_non_dis
NULL

$LE_non_dis_exp
NULL

$LE_non_dis_nonexp
NULL

$np_age
NULL

$tp_dis
NULL

$nsurvival
NULL

$rsurvival
NULL

$nb_dis
NULL

$nb_dis_exp
NULL

$nb_dis_nonexp
NULL

$p_dis
NULL

$a_dis
NULL

$m_exp
NULL

$p_exp
NULL

$mortality_r
NULL

$result1
[1] 54

$result2
$converge
[1] "Model converged successfully"

$logL
[1] -12.35931

$AICc
[1] 48.51173

$ancestral.values
[1] 9.326064 4.476200

$SE.anc
[1] NA

$optima
[1] 8.586572 3.709549

$SE.optima
[1] NA

$A
         [,1]       [,2]
[1,] 102.7215 -105.43338
[2,]   0.0000   22.87822

$SE.A
[1] NA

$half.life
[1] 0.006747831 0.030297250

$R
          [,1]      [,2]
[1,]  7.486929 -3.749345
[2,] -3.749345 11.993022

$SE.R
[1] NA

$method
[1] "Joint"

$K
[1] 10

$n
[1] 69

$iter
[1] 1

attr(,"class")
[1] "paleoTSfit"

$result3
Time difference of 1.032984 days

> 
> 
> 
> 
> save.image(file='Jensen_FINAL_junsept_6.RData')
> 

Job 11096748 consumed 456.8 billing hours from project nn8105k.

Submitted 2024-04-06T18:21:35; waited 0.0 seconds in the queue after becoming eligible to run.

Requested wallclock time: 4.0 days
Elapsed wallclock time:   1.3 days

Task and CPU statistics:
ID              CPUs  Tasks  CPU util                Start  Elapsed  Exit status
11096748          15            0.0 %  2024-04-06T18:21:35   30.5 h  0
11096748.batch    15      1   185.8 %  2024-04-06T18:21:35   30.5 h  0

Used CPU time:   35.4 CPU days
Unused CPU time: 0.0 CPU seconds

Memory statistics, in GiB:
ID               Alloc   Usage
11096748          10.0        
11096748.batch    10.0     2.7

Job 11096748 completed at Mon Apr 8 00:48:51 CEST 2024

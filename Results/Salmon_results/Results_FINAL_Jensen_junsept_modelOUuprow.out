Starting job 8883816 on c2-46 on saga at Tue Jul 4 15:18:37 CEST 2023


Currently Loaded Modules:
  1) StdEnv                              (S)
  2) GCCcore/11.3.0
  3) zlib/1.2.12-GCCcore-11.3.0          (H)
  4) binutils/2.38-GCCcore-11.3.0        (H)
  5) GCC/11.3.0
  6) numactl/2.0.14-GCCcore-11.3.0       (H)
  7) XZ/5.2.5-GCCcore-11.3.0             (H)
  8) libxml2/2.9.13-GCCcore-11.3.0       (H)
  9) libpciaccess/0.16-GCCcore-11.3.0    (H)
 10) hwloc/2.7.1-GCCcore-11.3.0          (H)
 11) hpcx/2.14
 12) OpenMPI/4.1.4-GCC-11.3.0
 13) OpenBLAS/0.3.20-GCC-11.3.0
 14) FlexiBLAS/3.2.0-GCC-11.3.0
 15) FFTW/3.3.10-GCC-11.3.0
 16) gompi/2022a
 17) FFTW.MPI/3.3.10-gompi-2022a
 18) ScaLAPACK/2.2.0-gompi-2022a-fb
 19) foss/2022a
 20) bzip2/1.0.8-GCCcore-11.3.0          (H)
 21) expat/2.4.8-GCCcore-11.3.0          (H)
 22) libpng/1.6.37-GCCcore-11.3.0        (H)
 23) Brotli/1.0.9-GCCcore-11.3.0         (H)
 24) freetype/2.12.1-GCCcore-11.3.0      (H)
 25) ncurses/6.3-GCCcore-11.3.0          (H)
 26) util-linux/2.38-GCCcore-11.3.0      (H)
 27) fontconfig/2.14.0-GCCcore-11.3.0    (H)
 28) xorg-macros/1.19.3-GCCcore-11.3.0   (H)
 29) X11/20220504-GCCcore-11.3.0         (H)
 30) gzip/1.12-GCCcore-11.3.0            (H)
 31) lz4/1.9.3-GCCcore-11.3.0            (H)
 32) zstd/1.5.2-GCCcore-11.3.0           (H)
 33) libdrm/2.4.110-GCCcore-11.3.0       (H)
 34) libglvnd/1.4.0-GCCcore-11.3.0       (H)
 35) libunwind/1.6.2-GCCcore-11.3.0      (H)
 36) LLVM/14.0.3-GCCcore-11.3.0          (H)
 37) Mesa/22.0.3-GCCcore-11.3.0          (H)
 38) libGLU/9.0.2-GCCcore-11.3.0         (H)
 39) pixman/0.40.0-GCCcore-11.3.0        (H)
 40) libffi/3.4.2-GCCcore-11.3.0         (H)
 41) gettext/0.21-GCCcore-11.3.0         (H)
 42) PCRE/8.45-GCCcore-11.3.0            (H)
 43) GLib/2.72.1-GCCcore-11.3.0          (H)
 44) cairo/1.17.4-GCCcore-11.3.0         (H)
 45) libreadline/8.1.2-GCCcore-11.3.0    (H)
 46) Tcl/8.6.12-GCCcore-11.3.0           (H)
 47) SQLite/3.38.3-GCCcore-11.3.0        (H)
 48) PCRE2/10.40-GCCcore-11.3.0          (H)
 49) NASM/2.15.05-GCCcore-11.3.0         (H)
 50) libjpeg-turbo/2.1.3-GCCcore-11.3.0  (H)
 51) jbigkit/2.1-GCCcore-11.3.0          (H)
 52) libdeflate/1.10-GCCcore-11.3.0      (H)
 53) LibTIFF/4.3.0-GCCcore-11.3.0        (H)
 54) Java/11.0.16
 55) Tk/8.6.12-GCCcore-11.3.0            (H)
 56) OpenSSL/1.1                         (H)
 57) cURL/7.83.0-GCCcore-11.3.0          (H)
 58) GMP/6.2.1-GCCcore-11.3.0            (H)
 59) NLopt/2.7.1-GCCcore-11.3.0          (H)
 60) libogg/1.3.5-GCCcore-11.3.0         (H)
 61) FLAC/1.3.4-GCCcore-11.3.0           (H)
 62) libvorbis/1.3.7-GCCcore-11.3.0      (H)
 63) libopus/1.3.1-GCCcore-11.3.0        (H)
 64) LAME/3.100-GCCcore-11.3.0           (H)
 65) libsndfile/1.1.0-GCCcore-11.3.0     (H)
 66) ICU/71.1-GCCcore-11.3.0             (H)
 67) Szip/2.1.1-GCCcore-11.3.0           (H)
 68) HDF5/1.12.2-gompi-2022a
 69) UDUNITS/2.2.28-GCCcore-11.3.0
 70) GSL/2.7-GCC-11.3.0
 71) ATK/2.38.0-GCCcore-11.3.0           (H)
 72) Gdk-Pixbuf/2.42.8-GCCcore-11.3.0    (H)
 73) HarfBuzz/4.2.1-GCCcore-11.3.0       (H)
 74) FriBidi/1.0.12-GCCcore-11.3.0       (H)
 75) Pango/1.50.7-GCCcore-11.3.0         (H)
 76) GTK2/2.24.33-GCCcore-11.3.0         (H)
 77) Ghostscript/9.56.1-GCCcore-11.3.0   (H)
 78) JasPer/2.0.33-GCCcore-11.3.0        (H)
 79) LittleCMS/2.13.1-GCCcore-11.3.0     (H)
 80) ImageMagick/7.1.0-37-GCCcore-11.3.0 (H)
 81) GLPK/5.0-GCCcore-11.3.0             (H)
 82) nodejs/16.15.1-GCCcore-11.3.0       (H)
 83) Python/3.10.4-GCCcore-11.3.0
 84) netCDF/4.9.0-gompi-2022a
 85) GEOS/3.10.3-GCC-11.3.0
 86) nlohmann_json/3.10.5-GCCcore-11.3.0 (H)
 87) PROJ/9.0.0-GCCcore-11.3.0
 88) libgeotiff/1.7.1-GCCcore-11.3.0     (H)
 89) pybind11/2.9.2-GCCcore-11.3.0       (H)
 90) SciPy-bundle/2022.05-foss-2022a
 91) libtirpc/1.3.2-GCCcore-11.3.0       (H)
 92) HDF/4.2.15-GCCcore-11.3.0           (H)
 93) GDAL/3.5.0-foss-2022a
 94) MPFR/4.1.0-GCCcore-11.3.0           (H)
 95) libgit2/1.4.3-GCCcore-11.3.0        (H)
 96) R/4.2.1-foss-2022a

  Where:
   H:  Hidden Module
   S:  Module is Sticky, requires --force to unload or purge

 


R version 4.2.1 (2022-06-23) -- "Funny-Looking Kid"
Copyright (C) 2022 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> .libPaths("/cluster/home/marionth/R")
> library(evoTS)
Warning message:
package ‘evoTS’ was built under R version 4.2.2 
> library(paleoTS)
> library(stats)
> library(dplyr)

Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

> library(parallel)
> library(foreach)
> library(doParallel)
Loading required package: iterators
> library(MCSPCD)
> 
> 
> setwd("/cluster/home/marionth/Jensen")
> 
> 
> 
> ###### LOAD MORPHOLOGICAL DATA ######
> 
> 
> 
> data1=read.delim("/cluster/home/marionth/Jensen/Atlantic_salmon_size.txt")
> data1 = data1 %>% filter(!is.na(Year.of.catch))
> 
> year=unique(data1$Year.of.catch)  #garder qu un exemplaire de chaque date
> data2=matrix(nrow=length(year), ncol=4)
> colnames(data2)<-c("nn"," mm", "vv", "tt")
> 
> for (i in 1:length(year)){
+   subdat=subset(data1, data1$Year.of.catch == year[i])  # un subset par annee
+   
+   data2[i,1] = nrow(subdat)
+   data2[i,2] = mean(subdat$Mass)
+   data2[i,3] = var(subdat$Mass)
+   data2[i,4] = year[i]
+ }
> 
> data2=data2[order(year),]
> 
> 
> 
> ###### FOR FROM JUN TO SEPT WATER FLOW VALUES ######
> ###### LOAD ENVIRONMENTAL DATA AND RESIZE ######
> 
> 
> 
> Discharge <- read.delim("/cluster/home/marionth/Jensen/Discharge.txt")
> Envi = Discharge[-c(1:9,28:35,87:88),]
> Morpho = data2[-c(1:2),]  # garder que les lignes ou on a les donnees pour l environment et le morpho
> 
> 
> 
> ###### CREATING PALEOTS AND EVOTS OBJECTS ######
> 
> 
> 
> dataEnvi=paleoTS::as.paleoTS(mm=Envi[,3], vv=c(rep(0.000001,length(Envi[,1]))), nn=c(rep(1000,length(Envi[,1]))), tt=Envi[,1], oldest = "first")
> ln.dataEnvi=paleoTS::ln.paleoTS(dataEnvi)
> dataEnvi$tt=dataEnvi$tt/(max(dataEnvi$tt))
> ln.dataEnvi$tt=ln.dataEnvi$tt/(max(ln.dataEnvi$tt))
> 
> dataMorpho=paleoTS::as.paleoTS(mm=Morpho[,2], vv=Morpho[,3], nn=Morpho[,1], tt=Morpho[,4], oldest = "first")
> ln.dataMorpho=paleoTS::ln.paleoTS(dataMorpho)
> dataMorpho$tt=dataMorpho$tt/(max(dataMorpho$tt))
> ln.dataMorpho$tt=ln.dataMorpho$tt/(max(ln.dataMorpho$tt))
> 
> 
> 
> 
> 
> multilnmorpholnenvi=make.multivar.evoTS(ln.dataMorpho, ln.dataEnvi) 
> plotevoTS.multivariate(multilnmorpholnenvi, y_min=0, y_max=20, x.label="relative time", y.label="Salmon mass and water flow", pch=c(20,20))
> 
> 
> 
> 
> 
> ###### MULTIVARIATE MODELS ######
> 
> 
> 
> 
> #number of cores that I want to use (also defined in the batch script)
> registerDoParallel(15)
> 
> #To calculate the time needed to process each iteration
> start_time <- Sys.time()
> 
> 
> 
> A = matrix(c(1,1,0,0), nrow = 2, byrow=TRUE) #1 for parametrised and 0 for not parametrised
> R = matrix(c(1,0,0,1), nrow = 2, byrow=TRUE) #5 traits donc 25 cases dans la matrice
> 
> 
> 
> 
> 
> #Loop foreach 
> OUOUmodel.upperrowdiagENVIjs <- foreach(i=1:100) %dopar% { #calculation for each iteration 
+   result <- multiResultClass() #create a table to store the results
+   
+   #set and register a different seed for each loop
+   seed <- (10+i) 
+   set.seed(seed)
+   
+   result$result1 <- seed
+   result$result2 <- fit.multivariate.OU.user.defined(multilnmorpholnenvi,A.user=A,R.user=R, iterations=1, iter.sd=0.000001)
+   
+   
+   end_time <- Sys.time(); end_time - start_time 
+   print( end_time - start_time ) 
+   result$result3 <- end_time - start_time 
+   
+   return(result)
+   
+ }
Time difference of 1.445059 hours
Time difference of 1.817675 hours
Time difference of 2.035365 hours
Time difference of 2.051301 hours
Time difference of 2.094455 hours
Time difference of 2.245246 hours
Time difference of 2.248537 hours
Time difference of 2.308165 hours
Time difference of 2.471719 hours
Time difference of 2.638242 hours
Time difference of 2.648145 hours
Time difference of 2.741101 hours
Time difference of 2.890803 hours
Time difference of 3.145181 hours
Time difference of 3.296991 hours
Time difference of 3.940114 hours
Time difference of 4.070752 hours
Time difference of 4.339881 hours
Time difference of 4.502416 hours
Time difference of 4.701143 hours
Time difference of 4.727723 hours
Time difference of 4.789268 hours
Time difference of 4.941741 hours
Time difference of 4.945894 hours
Time difference of 4.967561 hours
Time difference of 5.041716 hours
Time difference of 5.107234 hours
Time difference of 5.612229 hours
Time difference of 5.62653 hours
Time difference of 5.908494 hours
Time difference of 6.327374 hours
Time difference of 6.40437 hours
Time difference of 6.921609 hours
Time difference of 6.967267 hours
Time difference of 7.118432 hours
Time difference of 7.120365 hours
Time difference of 7.238419 hours
Time difference of 7.398262 hours
Time difference of 7.593477 hours
Time difference of 7.788367 hours
Time difference of 7.815899 hours
Time difference of 7.943015 hours
Time difference of 8.142797 hours
Time difference of 8.445519 hours
Time difference of 8.616849 hours
Time difference of 9.050788 hours
Time difference of 9.239717 hours
Time difference of 9.369533 hours
Time difference of 9.43882 hours
Time difference of 9.646484 hours
Time difference of 9.767892 hours
Time difference of 9.93119 hours
Time difference of 10.14818 hours
Time difference of 10.17038 hours
Time difference of 10.56828 hours
Time difference of 10.59374 hours
Time difference of 11.10597 hours
Time difference of 11.11732 hours
Time difference of 11.15952 hours
Time difference of 11.40662 hours
Time difference of 11.67313 hours
Time difference of 11.7555 hours
Time difference of 11.85217 hours
Time difference of 11.91228 hours
Time difference of 12.20025 hours
Time difference of 12.40217 hours
Time difference of 12.41458 hours
Time difference of 12.43449 hours
Time difference of 12.71658 hours
Time difference of 12.71781 hours
Time difference of 13.05667 hours
Time difference of 13.4198 hours
Time difference of 13.58577 hours
Time difference of 13.6363 hours
Time difference of 13.83524 hours
Time difference of 14.09032 hours
Time difference of 14.29639 hours
Time difference of 14.44322 hours
Time difference of 14.47171 hours
Time difference of 14.76029 hours
Time difference of 14.83221 hours
Time difference of 14.92637 hours
Time difference of 15.13396 hours
Time difference of 15.18231 hours
Time difference of 15.31188 hours
Time difference of 15.62884 hours
Time difference of 15.64824 hours
Time difference of 15.72131 hours
Time difference of 15.80783 hours
Time difference of 15.9458 hours
Time difference of 15.97873 hours
Time difference of 15.99884 hours
Time difference of 16.18106 hours
Time difference of 16.21114 hours
Time difference of 16.2372 hours
Time difference of 16.32426 hours
Time difference of 16.54611 hours
Time difference of 16.56057 hours
Time difference of 16.56486 hours
Time difference of 17.1311 hours
> 
> 
> print ("DONE")
[1] "DONE"
> end_time <- Sys.time(); end_time - start_time
Time difference of 17.1311 hours
> 
> 
> #creation of AIC matrix
> AICvalues<-matrix(ncol=2,nrow=100)
> colnames(AICvalues) <- c("iteration", "AIC")
> 
> 
> #Loop to fill the AIC matrix
> for (j in 1:100) {
+   AICvalues[j,1] = j #iteration number
+   AICvalues[j,2] = OUOUmodel.upperrowdiagENVIjs[[j]]$result2$AIC #AIC value
+ }
> 
> 
> #Finding the best AIC
> BestAICiteration = which.min(AICvalues[,2])
> 
> #Finding the best iteration associated to the best AIC
> BESTRESULT=OUOUmodel.upperrowdiagENVIjs[[BestAICiteration]]
> BESTRESULT
$LE_overall
NULL

$LE_overall_exp
NULL

$LE_overall_nonexp
NULL

$LE_without_dis
NULL

$LE_without_dis_exp
NULL

$LE_without_dis_nonexp
NULL

$LE_dis
NULL

$LE_dis_exp
NULL

$LE_dis_nonexp
NULL

$LE_non_dis
NULL

$LE_non_dis_exp
NULL

$LE_non_dis_nonexp
NULL

$np_age
NULL

$tp_dis
NULL

$nsurvival
NULL

$rsurvival
NULL

$nb_dis
NULL

$nb_dis_exp
NULL

$nb_dis_nonexp
NULL

$p_dis
NULL

$a_dis
NULL

$m_exp
NULL

$p_exp
NULL

$mortality_r
NULL

$result1
[1] 105

$result2
$converge
[1] "The search algorithm stopped as it did not make progress towards the optimal solution"

$logL
[1] -5.777401

$AICc
[1] 27.39087

$ancestral.values
[1] 9.358911 4.476200

$SE.anc
[1] NA

$optima
[1] 12.77643       NA

$SE.optima
[1] NA

$A
         [,1]      [,2]
[1,] 26.74206 -13.10605
[2,]  0.00000   0.00000

$SE.A
[1] NA

$half.life
[1] 0.02591974        Inf

$R
         [,1]     [,2]
[1,] 6.774873 0.000000
[2,] 0.000000 9.933872

$SE.R
[1] NA

$method
[1] "Joint"

$K
[1] 7

$n
[1] 69

$iter
[1] 1

attr(,"class")
[1] "paleoTSfit"

$result3
Time difference of 16.18106 hours

> 
> 
> 
> 
> save.image(file='Jensen_FINAL_junsept_4.RData')
> 

Job 8883816 consumed 257.1 billing hours from project nn8105k.

Submitted 2023-07-04T15:18:07; waited 30.0 seconds in the queue after becoming eligible to run.

Requested wallclock time: 7.0 days
Elapsed wallclock time:   17.1 hours

Task and CPU statistics:
ID             CPUs  Tasks  CPU util                Start  Elapsed  Exit status
8883816          15            0.0 %  2023-07-04T15:18:37   17.1 h  0
8883816.batch    15      1   188.1 %  2023-07-04T15:18:37   17.1 h  0

Used CPU time:   20.1 CPU days
Unused CPU time: 0.0 CPU seconds

Memory statistics, in GiB:
ID              Alloc   Usage
8883816           3.0        
8883816.batch     3.0     5.2

Job 8883816 completed at Wed Jul 5 08:27:06 CEST 2023

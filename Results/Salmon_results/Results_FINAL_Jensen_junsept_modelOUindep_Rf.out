Starting job 11096747 on c1-7 on saga at Sat Apr 6 18:21:31 CEST 2024


Currently Loaded Modules:
  1) StdEnv                              (S)
  2) GCCcore/11.3.0
  3) zlib/1.2.12-GCCcore-11.3.0          (H)
  4) binutils/2.38-GCCcore-11.3.0        (H)
  5) GCC/11.3.0
  6) numactl/2.0.14-GCCcore-11.3.0       (H)
  7) XZ/5.2.5-GCCcore-11.3.0             (H)
  8) libxml2/2.9.13-GCCcore-11.3.0       (H)
  9) libpciaccess/0.16-GCCcore-11.3.0    (H)
 10) hwloc/2.7.1-GCCcore-11.3.0          (H)
 11) hpcx/2.14
 12) OpenMPI/4.1.4-GCC-11.3.0
 13) OpenBLAS/0.3.20-GCC-11.3.0
 14) FlexiBLAS/3.2.0-GCC-11.3.0
 15) FFTW/3.3.10-GCC-11.3.0
 16) gompi/2022a
 17) FFTW.MPI/3.3.10-gompi-2022a
 18) ScaLAPACK/2.2.0-gompi-2022a-fb
 19) foss/2022a
 20) bzip2/1.0.8-GCCcore-11.3.0          (H)
 21) expat/2.4.8-GCCcore-11.3.0          (H)
 22) libpng/1.6.37-GCCcore-11.3.0        (H)
 23) Brotli/1.0.9-GCCcore-11.3.0         (H)
 24) freetype/2.12.1-GCCcore-11.3.0      (H)
 25) ncurses/6.3-GCCcore-11.3.0          (H)
 26) util-linux/2.38-GCCcore-11.3.0      (H)
 27) fontconfig/2.14.0-GCCcore-11.3.0    (H)
 28) xorg-macros/1.19.3-GCCcore-11.3.0   (H)
 29) X11/20220504-GCCcore-11.3.0         (H)
 30) gzip/1.12-GCCcore-11.3.0            (H)
 31) lz4/1.9.3-GCCcore-11.3.0            (H)
 32) zstd/1.5.2-GCCcore-11.3.0           (H)
 33) libdrm/2.4.110-GCCcore-11.3.0       (H)
 34) libglvnd/1.4.0-GCCcore-11.3.0       (H)
 35) libunwind/1.6.2-GCCcore-11.3.0      (H)
 36) LLVM/14.0.3-GCCcore-11.3.0          (H)
 37) Mesa/22.0.3-GCCcore-11.3.0          (H)
 38) libGLU/9.0.2-GCCcore-11.3.0         (H)
 39) pixman/0.40.0-GCCcore-11.3.0        (H)
 40) libffi/3.4.2-GCCcore-11.3.0         (H)
 41) gettext/0.21-GCCcore-11.3.0         (H)
 42) PCRE/8.45-GCCcore-11.3.0            (H)
 43) GLib/2.72.1-GCCcore-11.3.0          (H)
 44) cairo/1.17.4-GCCcore-11.3.0         (H)
 45) libreadline/8.1.2-GCCcore-11.3.0    (H)
 46) Tcl/8.6.12-GCCcore-11.3.0           (H)
 47) SQLite/3.38.3-GCCcore-11.3.0        (H)
 48) PCRE2/10.40-GCCcore-11.3.0          (H)
 49) NASM/2.15.05-GCCcore-11.3.0         (H)
 50) libjpeg-turbo/2.1.3-GCCcore-11.3.0  (H)
 51) jbigkit/2.1-GCCcore-11.3.0          (H)
 52) libdeflate/1.10-GCCcore-11.3.0      (H)
 53) LibTIFF/4.3.0-GCCcore-11.3.0        (H)
 54) Java/11.0.16
 55) Tk/8.6.12-GCCcore-11.3.0            (H)
 56) OpenSSL/1.1                         (H)
 57) cURL/7.83.0-GCCcore-11.3.0          (H)
 58) GMP/6.2.1-GCCcore-11.3.0            (H)
 59) NLopt/2.7.1-GCCcore-11.3.0          (H)
 60) libogg/1.3.5-GCCcore-11.3.0         (H)
 61) FLAC/1.3.4-GCCcore-11.3.0           (H)
 62) libvorbis/1.3.7-GCCcore-11.3.0      (H)
 63) libopus/1.3.1-GCCcore-11.3.0        (H)
 64) LAME/3.100-GCCcore-11.3.0           (H)
 65) libsndfile/1.1.0-GCCcore-11.3.0     (H)
 66) ICU/71.1-GCCcore-11.3.0             (H)
 67) Szip/2.1.1-GCCcore-11.3.0           (H)
 68) HDF5/1.12.2-gompi-2022a
 69) UDUNITS/2.2.28-GCCcore-11.3.0
 70) GSL/2.7-GCC-11.3.0
 71) ATK/2.38.0-GCCcore-11.3.0           (H)
 72) Gdk-Pixbuf/2.42.8-GCCcore-11.3.0    (H)
 73) HarfBuzz/4.2.1-GCCcore-11.3.0       (H)
 74) FriBidi/1.0.12-GCCcore-11.3.0       (H)
 75) Pango/1.50.7-GCCcore-11.3.0         (H)
 76) GTK2/2.24.33-GCCcore-11.3.0         (H)
 77) Ghostscript/9.56.1-GCCcore-11.3.0   (H)
 78) JasPer/2.0.33-GCCcore-11.3.0        (H)
 79) LittleCMS/2.13.1-GCCcore-11.3.0     (H)
 80) ImageMagick/7.1.0-37-GCCcore-11.3.0 (H)
 81) GLPK/5.0-GCCcore-11.3.0             (H)
 82) nodejs/16.15.1-GCCcore-11.3.0       (H)
 83) Python/3.10.4-GCCcore-11.3.0
 84) netCDF/4.9.0-gompi-2022a
 85) GEOS/3.10.3-GCC-11.3.0
 86) nlohmann_json/3.10.5-GCCcore-11.3.0 (H)
 87) PROJ/9.0.0-GCCcore-11.3.0
 88) libgeotiff/1.7.1-GCCcore-11.3.0     (H)
 89) pybind11/2.9.2-GCCcore-11.3.0       (H)
 90) SciPy-bundle/2022.05-foss-2022a
 91) libtirpc/1.3.2-GCCcore-11.3.0       (H)
 92) HDF/4.2.15-GCCcore-11.3.0           (H)
 93) GDAL/3.5.0-foss-2022a
 94) MPFR/4.1.0-GCCcore-11.3.0           (H)
 95) libgit2/1.4.3-GCCcore-11.3.0        (H)
 96) R/4.2.1-foss-2022a

  Where:
   H:  Hidden Module
   S:  Module is Sticky, requires --force to unload or purge

 


R version 4.2.1 (2022-06-23) -- "Funny-Looking Kid"
Copyright (C) 2022 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> .libPaths("/cluster/home/marionth/R")
> library(evoTS)
Warning message:
package ‘evoTS’ was built under R version 4.2.2 
> library(paleoTS)
Warning message:
package ‘paleoTS’ was built under R version 4.2.2 
> library(stats)
> library(dplyr)

Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

> library(parallel)
> library(foreach)
> library(doParallel)
Loading required package: iterators
> library(MCSPCD)
> 
> 
> setwd("/cluster/home/marionth/Jensen")
> 
> 
> 
> ###### LOAD MORPHOLOGICAL DATA ######
> 
> 
> 
> data1=read.delim("/cluster/home/marionth/Jensen/Atlantic_salmon_size.txt")
> data1 = data1 %>% filter(!is.na(Year.of.catch))
> 
> year=unique(data1$Year.of.catch)  #garder qu un exemplaire de chaque date
> data2=matrix(nrow=length(year), ncol=4)
> colnames(data2)<-c("nn"," mm", "vv", "tt")
> 
> for (i in 1:length(year)){
+   subdat=subset(data1, data1$Year.of.catch == year[i])  # un subset par annee
+   
+   data2[i,1] = nrow(subdat)
+   data2[i,2] = mean(subdat$Mass)
+   data2[i,3] = var(subdat$Mass)
+   data2[i,4] = year[i]
+ }
> 
> data2=data2[order(year),]
> 
> 
> 
> ###### FOR FROM JUN TO SEPT WATER FLOW VALUES ######
> ###### LOAD ENVIRONMENTAL DATA AND RESIZE ######
> 
> 
> 
> Discharge <- read.delim("/cluster/home/marionth/Jensen/Discharge.txt")
> Envi = Discharge[-c(1:9,28:35,87:88),]
> Morpho = data2[-c(1:2),]  # garder que les lignes ou on a les donnees pour l environment et le morpho
> 
> 
> 
> ###### CREATING PALEOTS AND EVOTS OBJECTS ######
> 
> 
> 
> dataEnvi=paleoTS::as.paleoTS(mm=Envi[,3], vv=c(rep(0.000001,length(Envi[,1]))), nn=c(rep(1000,length(Envi[,1]))), tt=Envi[,1], oldest = "first")
> ln.dataEnvi=paleoTS::ln.paleoTS(dataEnvi)
> dataEnvi$tt=dataEnvi$tt/(max(dataEnvi$tt))
> ln.dataEnvi$tt=ln.dataEnvi$tt/(max(ln.dataEnvi$tt))
> 
> dataMorpho=paleoTS::as.paleoTS(mm=Morpho[,2], vv=Morpho[,3], nn=Morpho[,1], tt=Morpho[,4], oldest = "first")
> ln.dataMorpho=paleoTS::ln.paleoTS(dataMorpho)
> dataMorpho$tt=dataMorpho$tt/(max(dataMorpho$tt))
> ln.dataMorpho$tt=ln.dataMorpho$tt/(max(ln.dataMorpho$tt))
> 
> 
> 
> 
> 
> multilnmorpholnenvi=make.multivar.evoTS(ln.dataMorpho, ln.dataEnvi) 
> plotevoTS.multivariate(multilnmorpholnenvi, y_min=0, y_max=20, x.label="relative time", y.label="Salmon mass and water flow", pch=c(20,20))
> 
> 
> 
> 
> 
> ###### MULTIVARIATE MODELS ######
> 
> 
> 
> 
> #number of cores that I want to use (also defined in the batch script)
> registerDoParallel(15)
> 
> #To calculate the time needed to process each iteration
> start_time <- Sys.time()
> 
> 
> 
> A = matrix(c(1,0,0,1), nrow = 2, byrow=TRUE) #1 for parametrised and 0 for not parametrised
> R = matrix(c(1,1,1,1), nrow = 2, byrow=TRUE) #5 traits donc 25 cases dans la matrice
> 
> 
> 
> 
> 
> #Loop foreach 
> OUOUmodel.upperrowdiagENVIjs <- foreach(i=1:100) %dopar% { #calculation for each iteration 
+   result <- multiResultClass() #create a table to store the results
+   
+   #set and register a different seed for each loop
+   seed <- (10+i) 
+   set.seed(seed)
+   
+   result$result1 <- seed
+   result$result2 <- fit.multivariate.OU.user.defined(multilnmorpholnenvi,A.user=A,R.user=R, iterations=1, iter.sd=0.000001)
+   
+   
+   end_time <- Sys.time(); end_time - start_time 
+   print( end_time - start_time ) 
+   result$result3 <- end_time - start_time 
+   
+   return(result)
+   
+ }
Time difference of 1.764834 hours
Time difference of 1.904301 hours
Time difference of 1.918761 hours
Time difference of 2.108864 hours
Time difference of 2.367645 hours
Time difference of 2.529682 hours
Time difference of 2.595348 hours
Time difference of 2.604951 hours
Time difference of 2.646607 hours
Time difference of 2.67485 hours
Time difference of 3.109342 hours
Time difference of 3.27744 hours
Time difference of 4.224575 hours
Time difference of 4.735762 hours
Time difference of 4.962705 hours
Time difference of 5.071681 hours
Time difference of 5.102927 hours
Time difference of 5.114735 hours
Time difference of 5.684165 hours
Time difference of 6.129257 hours
Time difference of 6.389379 hours
Time difference of 6.452192 hours
Time difference of 6.497666 hours
Time difference of 7.414146 hours
Time difference of 7.426474 hours
Time difference of 7.495102 hours
Time difference of 7.998312 hours
Time difference of 8.20448 hours
Time difference of 8.300674 hours
Time difference of 8.593754 hours
Time difference of 8.857383 hours
Time difference of 9.208074 hours
Time difference of 10.27369 hours
Time difference of 10.82096 hours
Time difference of 10.91742 hours
Time difference of 11.24439 hours
Time difference of 11.50706 hours
Time difference of 11.79271 hours
Time difference of 11.89718 hours
Time difference of 12.02056 hours
Time difference of 12.09524 hours
Time difference of 12.17363 hours
Time difference of 12.69527 hours
Time difference of 13.65443 hours
Time difference of 13.77185 hours
Time difference of 13.80886 hours
Time difference of 14.45671 hours
Time difference of 14.53606 hours
Time difference of 14.58527 hours
Time difference of 15.39484 hours
Time difference of 16.02542 hours
Time difference of 16.17035 hours
Time difference of 16.26727 hours
Time difference of 16.30302 hours
Time difference of 16.69153 hours
Time difference of 16.78016 hours
Time difference of 17.12691 hours
Time difference of 17.67216 hours
Time difference of 17.84449 hours
Time difference of 18.15481 hours
Time difference of 18.24546 hours
Time difference of 18.48615 hours
Time difference of 18.61682 hours
Time difference of 18.6275 hours
Time difference of 19.26024 hours
Time difference of 19.43932 hours
Time difference of 19.58718 hours
Time difference of 19.63485 hours
Time difference of 19.93585 hours
Time difference of 20.1004 hours
Time difference of 20.70578 hours
Time difference of 20.77461 hours
Time difference of 21.23317 hours
Time difference of 21.55718 hours
Time difference of 21.65139 hours
Time difference of 21.72974 hours
Time difference of 22.04027 hours
Time difference of 22.13976 hours
Time difference of 22.16175 hours
Time difference of 22.7762 hours
Time difference of 22.80587 hours
Time difference of 23.14961 hours
Time difference of 23.47125 hours
Time difference of 23.55288 hours
Time difference of 23.6262 hours
Time difference of 23.79046 hours
Time difference of 1.002099 days
Time difference of 1.002137 days
Time difference of 1.011807 days
Time difference of 1.014578 days
Time difference of 1.022992 days
Time difference of 1.034468 days
Time difference of 1.036415 days
Time difference of 1.04757 days
Time difference of 1.061658 days
Time difference of 1.062198 days
Time difference of 1.075215 days
Time difference of 1.084495 days
Time difference of 1.11576 days
Time difference of 1.139351 days
> 
> 
> print ("DONE")
[1] "DONE"
> end_time <- Sys.time(); end_time - start_time
Time difference of 1.139352 days
> 
> 
> #creation of AIC matrix
> AICvalues<-matrix(ncol=2,nrow=100)
> colnames(AICvalues) <- c("iteration", "AIC")
> 
> 
> #Loop to fill the AIC matrix
> for (j in 1:100) {
+   AICvalues[j,1] = j #iteration number
+   AICvalues[j,2] = OUOUmodel.upperrowdiagENVIjs[[j]]$result2$AIC #AIC value
+ }
> 
> 
> #Finding the best AIC
> BestAICiteration = which.min(AICvalues[,2])
> 
> #Finding the best iteration associated to the best AIC
> BESTRESULT=OUOUmodel.upperrowdiagENVIjs[[BestAICiteration]]
> BESTRESULT
$LE_overall
NULL

$LE_overall_exp
NULL

$LE_overall_nonexp
NULL

$LE_without_dis
NULL

$LE_without_dis_exp
NULL

$LE_without_dis_nonexp
NULL

$LE_dis
NULL

$LE_dis_exp
NULL

$LE_dis_nonexp
NULL

$LE_non_dis
NULL

$LE_non_dis_exp
NULL

$LE_non_dis_nonexp
NULL

$np_age
NULL

$tp_dis
NULL

$nsurvival
NULL

$rsurvival
NULL

$nb_dis
NULL

$nb_dis_exp
NULL

$nb_dis_nonexp
NULL

$p_dis
NULL

$a_dis
NULL

$m_exp
NULL

$p_exp
NULL

$mortality_r
NULL

$result1
[1] 53

$result2
$converge
[1] "Model converged successfully"

$logL
[1] -20.82644

$AICc
[1] 62.70373

$ancestral.values
[1] 9.315873 4.476200

$SE.anc
[1] NA

$optima
[1] 8.603246 3.682618

$SE.optima
[1] NA

$A
         [,1]     [,2]
[1,] 20.82542  0.00000
[2,]  0.00000 31.87191

$SE.A
[1] NA

$half.life
[1] 0.03328371 0.02174790

$R
         [,1]      [,2]
[1,] 7.685643  1.928059
[2,] 1.928059 12.823141

$SE.R
[1] NA

$method
[1] "Joint"

$K
[1] 9

$n
[1] 69

$iter
[1] 1

attr(,"class")
[1] "paleoTSfit"

$result3
Time difference of 20.77461 hours

> 
> 
> 
> 
> save.image(file='Jensen_FINAL_junsept_5.RData')
> 

Job 11096747 consumed 410.3 billing hours from project nn8105k.

Submitted 2024-04-06T18:21:30; waited 0.0 seconds in the queue after becoming eligible to run.

Requested wallclock time: 4.0 days
Elapsed wallclock time:   1.1 days

Task and CPU statistics:
ID              CPUs  Tasks  CPU util                Start  Elapsed  Exit status
11096747          15            0.0 %  2024-04-06T18:21:30   27.4 h  0
11096747.batch    15      1   183.3 %  2024-04-06T18:21:30   27.4 h  0

Used CPU time:   31.3 CPU days
Unused CPU time: 0.0 CPU seconds

Memory statistics, in GiB:
ID               Alloc   Usage
11096747          10.0        
11096747.batch    10.0     2.8

Job 11096747 completed at Sun Apr 7 21:42:36 CEST 2024
